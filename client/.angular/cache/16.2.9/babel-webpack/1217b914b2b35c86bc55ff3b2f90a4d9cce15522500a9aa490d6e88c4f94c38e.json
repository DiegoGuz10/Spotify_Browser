{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/spotify.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/track-list/track-list.component\";\nfunction AlbumPageComponent_div_0_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Artist: \");\n    i0.ɵɵelementStart(2, \"a\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"./artist/\", artist_r2.id, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r2.name);\n  }\n}\nfunction AlbumPageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 3);\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtemplate(6, AlbumPageComponent_div_0_li_6_Template, 4, 2, \"li\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"a\", 5);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 6)(11, \"h3\");\n    i0.ɵɵtext(12, \"Album Tracks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"app-track-list\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.album.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.album.imageURL, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.album.artists);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r0.album.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Open \", ctx_r0.album.name, \" on Spotify\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"tracks\", ctx_r0.tracks);\n  }\n}\nexport class AlbumPageComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n  }\n  //TODO: inject spotifyService and use it to get the album data and the tracks for the album\n  //when the album page is activated, sends requests to Express to get data to populate the appropriate fields\n  ngOnInit() {\n    this.albumId = this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getAlbum(this.albumId).then(data => {\n      this.album = data;\n    });\n    this.spotifyService.getTracksForAlbum(this.albumId).then(data => {\n      this.tracks = data;\n    });\n  }\n  static #_ = this.ɵfac = function AlbumPageComponent_Factory(t) {\n    return new (t || AlbumPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlbumPageComponent,\n    selectors: [[\"app-album-page\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"wholePage\", 4, \"ngIf\"], [\"id\", \"wholePage\"], [\"id\", \"albumPic\"], [\"id\", \"albumPicImg\", 3, \"src\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", \"target\", \"_blank\", 1, \"btn\", \"btn-light\", 3, \"href\"], [\"id\", \"albumTracks\"], [\"id\", \"albumTracksRows\", \"hideArtist\", \"true\", \"hideAlbum\", \"true\", 3, \"tracks\"], [3, \"href\"]],\n    template: function AlbumPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AlbumPageComponent_div_0_Template, 14, 6, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.album);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.TrackListComponent],\n    styles: [\"#wholePage[_ngcontent-%COMP%]{\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    width: 100%;\\n    height: 100%;\\n    \\n\\n\\n}\\n\\n#albumPicImg[_ngcontent-%COMP%]{\\n\\twidth: 450px;\\n\\theight: 450px;\\n}\\n\\n#albumTracksRows[_ngcontent-%COMP%]{\\n\\theight: 85vh; \\n\\n    \\n\\n    overflow-y: auto;\\n}\\n\\n#albumPic[_ngcontent-%COMP%]{\\n    grid-column: 1/2;\\n    display: flex;\\n    flex-direction: column;\\n\\n    justify-content: flex-start;\\n    align-items: center;\\n  \\n    \\n\\n\\n    \\n}\\n\\n#albumTracks[_ngcontent-%COMP%]{\\n    grid-column: 2/3;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    align-items: center;\\n    \\n\\n    \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYWxidW0tcGFnZS9hbGJ1bS1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLFdBQVc7SUFDWCxZQUFZO0lBQ1oseUJBQXlCOztBQUU3Qjs7QUFFQTtDQUNDLFlBQVk7Q0FDWixhQUFhO0FBQ2Q7O0FBRUE7Q0FDQyxZQUFZLEVBQUUsbURBQW1EO0lBQzlELGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjs7SUFFdEIsMkJBQTJCO0lBQzNCLG1CQUFtQjs7SUFFbkI7MEJBQ3NCOztBQUUxQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQixtQkFBbUI7SUFDbkIsNkJBQTZCO0lBQzdCLHlCQUF5QjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIiN3aG9sZVBhZ2V7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC8qIHBsYWNlLWl0ZW1zOiBjZW50ZXI7ICovXG5cbn1cblxuI2FsYnVtUGljSW1ne1xuXHR3aWR0aDogNDUwcHg7XG5cdGhlaWdodDogNDUwcHg7XG59XG5cbiNhbGJ1bVRyYWNrc1Jvd3N7XG5cdGhlaWdodDogODV2aDsgLyogU2V0IHRoZSBkZXNpcmVkIGhlaWdodCBmb3IgdGhlIHNjcm9sbGFibGUgYXJlYSAqL1xuICAgIC8qIHdpZHRoOiA0NXZ3OyAqL1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG59XG5cbiNhbGJ1bVBpY3tcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBcbiAgICAvKiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyAqL1xuICAgIFxufVxuXG4jYWxidW1UcmFja3N7XG4gICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLyoganVzdGlmeS1jb250ZW50OiBjZW50ZXI7ICovXG4gICAgLyogYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","artist_r2","id","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵelement","ɵɵtemplate","AlbumPageComponent_div_0_li_6_Template","ctx_r0","album","ɵɵproperty","imageURL","artists","url","ɵɵtextInterpolate1","tracks","AlbumPageComponent","constructor","route","spotifyService","ngOnInit","albumId","snapshot","paramMap","get","getAlbum","then","data","getTracksForAlbum","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","SpotifyService","_2","selectors","decls","vars","consts","template","AlbumPageComponent_Template","rf","ctx","AlbumPageComponent_div_0_Template"],"sources":["/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/pages/album-page/album-page.component.ts","/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/pages/album-page/album-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ArtistData } from '../../data/artist-data';\nimport { TrackData } from '../../data/track-data';\nimport { AlbumData } from '../../data/album-data';\nimport { SpotifyService } from '../../services/spotify.service';\n\n\n@Component({\n  selector: 'app-album-page',\n  templateUrl: './album-page.component.html',\n  styleUrls: ['./album-page.component.css']\n})\nexport class AlbumPageComponent implements OnInit {\n  albumId:string;\n  album:AlbumData;\n  tracks:TrackData[];\n\n\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService) { }\n\n\n  //TODO: inject spotifyService and use it to get the album data and the tracks for the album\n  //when the album page is activated, sends requests to Express to get data to populate the appropriate fields\n  ngOnInit() {\n    this.albumId = this.route.snapshot.paramMap.get('id');\n   \n    this.spotifyService.getAlbum(this.albumId).then((data) => {\n      this.album = data;\n    })\n\n\n    this.spotifyService.getTracksForAlbum(this.albumId).then((data) => {\n      this.tracks = data;\n    })\n  }\n\n\n}\n","<div id = \"wholePage\" *ngIf=\"album\" >\n    <div id = \"albumPic\">\n        <!--TODO: populate with album name-->\n        <h1>{{album.name}}</h1>\n        <!--TODO: set src to album image URL-->\n        <img id=\"albumPicImg\" [src]=\"this.album.imageURL\">\n        <!--TODO: loop over album artists-->\n        <p>\n            <!--TODO: link to artist page, display artist name-->\n            <li *ngFor=\"let artist of this.album.artists\">\n                Artist: <a href=\"./artist/{{artist.id}}\">{{artist.name}}</a>\n            </li>\n        </p>\n        <p>\n            <!--TODO: link to album page on spotify, display album name-->\n            <a class=\"btn btn-light\" role=\"button\" target=\"_blank\" [href]=\"this.album.url\">Open {{album.name}} on Spotify</a>\n        </p>\n    </div>\n    <div id = \"albumTracks\">\n        <h3>Album Tracks</h3>\n        <!--TODO: display the track list for the album. Hide the artist and album columns because they are redundant on this page.-->\n        <app-track-list id =\"albumTracksRows\" [tracks]=\"this.tracks\" hideArtist=\"true\" hideAlbum=\"true\"></app-track-list>\n    </div>\n</div>\n\n\n<!--\n    https://www.geeksforgeeks.org/angular10-ngfor-directive/#\n    https://www.w3schools.com/tags/tag_a.asp\n-->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
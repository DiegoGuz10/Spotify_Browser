{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/spotify.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/thermometer/thermometer.component\";\nfunction TrackPageComponent_div_1_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Artist: \");\n    i0.ɵɵelementStart(2, \"a\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"./artist/\", artist_r3.id, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r3.name);\n  }\n}\nfunction TrackPageComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \" Track on \");\n    i0.ɵɵelementStart(5, \"a\", 4);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtemplate(8, TrackPageComponent_div_1_p_8_Template, 4, 2, \"p\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"a\", 6);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.track.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"./album/\", ctx_r0.track.album.id, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.track.album.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.track.album.artists);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Duration: \", ctx_r0.track.durationStr, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r0.track.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Open \", ctx_r0.track.name, \" on Spotify\");\n  }\n}\nfunction TrackPageComponent_div_2_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"app-thermometer\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const feature_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"featureType\", feature_r5.name)(\"percentString\", feature_r5.percentageString)(\"color\", feature_r5.color);\n  }\n}\nfunction TrackPageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, TrackPageComponent_div_2_p_1_Template, 2, 3, \"p\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.audioFeatures);\n  }\n}\nexport class TrackPageComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n  }\n  ngOnInit() {\n    this.trackId = this.route.snapshot.paramMap.get('id');\n    //TODO: Inject the spotifyService and use it to get the track data and it's audio features\n    //calls the Express request function in the service module to populate the track and audioFeatures fields\n    this.spotifyService.getTrack(this.trackId).then(data => {\n      this.track = data;\n    });\n    this.spotifyService.getAudioFeaturesForTrack(this.trackId).then(data => {\n      this.audioFeatures = data;\n    });\n  }\n  static #_ = this.ɵfac = function TrackPageComponent_Factory(t) {\n    return new (t || TrackPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrackPageComponent,\n    selectors: [[\"app-track-page\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[\"id\", \"wholePage\"], [\"id\", \"trackSection\", 4, \"ngIf\"], [\"id\", \"keywordsSection\", 4, \"ngIf\"], [\"id\", \"trackSection\"], [3, \"href\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", \"target\", \"_blank\", 1, \"btn\", \"btn-light\", 3, \"href\"], [\"id\", \"keywordsSection\"], [3, \"featureType\", \"percentString\", \"color\"]],\n    template: function TrackPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TrackPageComponent_div_1_Template, 14, 7, \"div\", 1);\n        i0.ɵɵtemplate(2, TrackPageComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.track);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.audioFeatures);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ThermometerComponent],\n    styles: [\"#wholePage[_ngcontent-%COMP%]{\\n    display: grid;\\n    grid-template-rows: 1fr 1fr;\\n    width: 100%;\\n    height: 100%;\\n    \\n\\n\\n}\\n\\n#trackSection[_ngcontent-%COMP%]{\\n    grid-row: 1/2;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n\\n    justify-content: center;\\n    align-items: center;\\n  \\n    \\n\\n\\n    \\n}\\n\\n#keywordsSection[_ngcontent-%COMP%]{\\n    grid-row: 2/3;\\n    \\n\\n    \\n\\n    \\n\\n    \\n\\n    \\n\\n    \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdHJhY2stcGFnZS90cmFjay1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1oseUJBQXlCOztBQUU3Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7O0lBRXRCLHVCQUF1QjtJQUN2QixtQkFBbUI7O0lBRW5COzBCQUNzQjs7QUFFMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QixpQ0FBaUM7SUFDakMseUJBQXlCO0lBQ3pCLDZCQUE2QjtJQUM3Qix5QkFBeUI7QUFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyIjd2hvbGVQYWdle1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAvKiBwbGFjZS1pdGVtczogY2VudGVyOyAqL1xuXG59XG5cbiN0cmFja1NlY3Rpb257XG4gICAgZ3JpZC1yb3c6IDEvMjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgXG4gICAgLyoganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cbiAgICBcbn1cblxuI2tleXdvcmRzU2VjdGlvbntcbiAgICBncmlkLXJvdzogMi8zO1xuICAgIC8qIGRpc3BsYXk6IGZsZXg7ICovXG4gICAgLyogZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgKi9cbiAgICAvKiBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7ICovXG4gICAgLyogYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cbiAgICAvKiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgKi9cbiAgICAvKiBhbGlnbi1pdGVtczogY2VudGVyOyAqL1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","artist_r3","id","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵtemplate","TrackPageComponent_div_1_p_8_Template","ctx_r0","track","album","ɵɵproperty","artists","ɵɵtextInterpolate1","durationStr","url","ɵɵelement","feature_r5","percentageString","color","TrackPageComponent_div_2_p_1_Template","ctx_r1","audioFeatures","TrackPageComponent","constructor","route","spotifyService","ngOnInit","trackId","snapshot","paramMap","get","getTrack","then","data","getAudioFeaturesForTrack","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","SpotifyService","_2","selectors","decls","vars","consts","template","TrackPageComponent_Template","rf","ctx","TrackPageComponent_div_1_Template","TrackPageComponent_div_2_Template"],"sources":["/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/pages/track-page/track-page.component.ts","/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/pages/track-page/track-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ArtistData } from '../../data/artist-data';\nimport { TrackData } from '../../data/track-data';\nimport { AlbumData } from '../../data/album-data';\nimport { TrackFeature } from '../../data/track-feature';\nimport { SpotifyService } from '../../services/spotify.service';\n\n@Component({\n  selector: 'app-track-page',\n  templateUrl: './track-page.component.html',\n  styleUrls: ['./track-page.component.css']\n})\nexport class TrackPageComponent implements OnInit {\n\ttrackId:string;\n\ttrack:TrackData;\n  audioFeatures:TrackFeature[];\n\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService) { }\n\n  ngOnInit() {\n  \tthis.trackId = this.route.snapshot.paramMap.get('id');\n  \t//TODO: Inject the spotifyService and use it to get the track data and it's audio features\n\n    //calls the Express request function in the service module to populate the track and audioFeatures fields\n    this.spotifyService.getTrack(this.trackId).then((data) => {\n      this.track = data;\n    })\n\n    this.spotifyService.getAudioFeaturesForTrack(this.trackId).then((data) => {\n      this.audioFeatures = data;\n    })\n  }\n\n}\n","<div id=\"wholePage\">\n\t<div id=\"trackSection\" *ngIf=\"track\">\n\t\t<!--TODO: populate with track name-->\n\t\t<h1>{{track.name}}</h1>\n\t\t<p>\n\t\t\t<!--TODO: link to album page, display album name-->\n\t\t\tTrack on <a href=\"./album/{{track.album.id}}\">{{this.track.album.name}}</a>\n\t\t</p>\n\t\t<div>\n\t\t\t<!--TODO: loop over track's artists-->\n\t\t\t<p *ngFor=\"let artist of this.track.album.artists\">\n\t\t\t\t<!--TODO: link to artist page, display artist name-->\n\t\t\t\tArtist: <a href=\"./artist/{{artist.id}}\">{{artist.name}}</a>\n\t\t\t</p>\n\t\t</div>\n\t\t<p>\n\t\t\t<!--TODO: populate with track duration-->\n\t\t\tDuration: {{track.durationStr}}\n\t\t</p>\n\t\t<p>\n\t\t\t<!--TODO: link to track page on spotify, display track name-->\n\t\t\t<a class=\"btn btn-light\" role=\"button\" target=\"_blank\" [href]=\"this.track.url\">Open {{track.name}} on Spotify</a>\n\t\t</p>\n\t</div>\n\t<div id=\"keywordsSection\" *ngIf=\"audioFeatures\" >\n\t\t<!--TODO: loop over types of features and create a thermometer component for each-->\n\t\t<p *ngFor=\"let feature of audioFeatures\">\n\t\t\t<app-thermometer [featureType]=\"feature.name\" [percentString]=\"feature.percentageString\" [color]=\"feature.color\">\n\t\t\t</app-thermometer>\n\t\t</p>\n\t</div>\n</div>\n\n<!-- https://getbootstrap.com/docs/5.3/components/progress/#backgrounds -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
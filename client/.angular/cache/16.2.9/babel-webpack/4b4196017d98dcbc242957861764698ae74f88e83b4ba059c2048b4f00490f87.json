{"ast":null,"code":"import _asyncToGenerator from \"/Users/diegoguzman/Downloads/Spotify_Browser/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/spotify.service\";\nexport class AboutComponent {\n  //TODO: inject the Spotify service\n  constructor(service) {\n    this.service = service;\n    this.name = null;\n    this.profile_pic = \"../../../assets/unknown.jpg\";\n    this.profile_link = null;\n  }\n  ngOnInit() {}\n  /*TODO: create a function which gets the \"about me\" information from Spotify when the button in the view is clicked.\n  In that function, update the name, profile_pic, and profile_link fields */\n  //when the component is ran, the about me section of the profile page is updated through a call to Express.\n  updateAboutMe() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.service.aboutMe().then(data => {\n        _this.name = data.name;\n        _this.profile_pic = data.imageURL;\n        _this.profile_link = data.spotifyProfile;\n      });\n    })();\n  }\n  static #_ = this.ɵfac = function AboutComponent_Factory(t) {\n    return new (t || AboutComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AboutComponent,\n    selectors: [[\"app-about\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"btn\", \"btn-light\", 3, \"click\"], [3, \"innerHTML\"], [3, \"src\"], [\"target\", \"_blank\", 1, \"btn\", \"btn-light\", 3, \"href\", \"hrefChange\"]],\n    template: function AboutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AboutComponent_Template_button_click_0_listener() {\n          return ctx.updateAboutMe();\n        });\n        i0.ɵɵtext(1, \"Load info about me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h3\");\n        i0.ɵɵtext(3, \"Logged in user: \");\n        i0.ɵɵelementStart(4, \"span\", 1);\n        i0.ɵɵtext(5, \"???\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(6, \"img\", 2);\n        i0.ɵɵelementStart(7, \"p\")(8, \"a\", 3);\n        i0.ɵɵlistener(\"hrefChange\", function AboutComponent_Template_a_hrefChange_8_listener($event) {\n          return ctx.profile_link = $event;\n        });\n        i0.ɵɵtext(9, \"Open profile on Spotify\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"innerHTML\", ctx.name, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.profile_pic, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"href\", ctx.profile_link, i0.ɵɵsanitizeUrl);\n      }\n    },\n    styles: [\"img[_ngcontent-%COMP%] {\\n\\twidth: 450px;\\n\\theight: 450px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsWUFBWTtDQUNaLGFBQWE7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XG5cdHdpZHRoOiA0NTBweDtcblx0aGVpZ2h0OiA0NTBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["AboutComponent","constructor","service","name","profile_pic","profile_link","ngOnInit","updateAboutMe","_this","_asyncToGenerator","aboutMe","then","data","imageURL","spotifyProfile","_","i0","ɵɵdirectiveInject","i1","SpotifyService","_2","selectors","decls","vars","consts","template","AboutComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AboutComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","AboutComponent_Template_a_hrefChange_8_listener","$event","ɵɵadvance","ɵɵproperty","ɵɵsanitizeHtml","ɵɵpropertyInterpolate","ɵɵsanitizeUrl"],"sources":["/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/components/about/about.component.ts","/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/components/about/about.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//taken from search.component.ts\nimport { SpotifyService } from '../../services/spotify.service';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  name:string = null;\n  profile_pic:string = \"../../../assets/unknown.jpg\";\n  profile_link:string = null;\n\n  //TODO: inject the Spotify service\n  constructor(private service:SpotifyService) { }\n\n  ngOnInit() {\n  }\n\n  /*TODO: create a function which gets the \"about me\" information from Spotify when the button in the view is clicked.\n  In that function, update the name, profile_pic, and profile_link fields */\n  //when the component is ran, the about me section of the profile page is updated through a call to Express.\n  async updateAboutMe() {\n    this.service.aboutMe().then((data) => {\n      this.name = data.name;\n      this.profile_pic = data.imageURL;\n      this.profile_link = data.spotifyProfile;\n    });\n  }\n}\n\n\n//https://masoudx.medium.com/dependency-injection-in-typescript-7bb8fdd2863c\n//https://sagrawal003.medium.com/when-to-use-curly-braces-in-es6-import-technolize-your-future-79db0853b263\n//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\n","<!--TODO: Define click callback to load about me information-->\n\n<button class=\"btn btn-light\" (click)=\"updateAboutMe()\">Load info about me</button>\n<!--TODO: replace ??? to bind to name-->\n<h3>Logged in user: <span [innerHTML]=\"name\">???</span></h3>\n<!--TODO: bind img src's to profile_pic-->\n<img src=\"{{profile_pic}}\">\n<p>\n\t<!--TODO: bind link's href to profile_link-->\n\t<a class=\"btn btn-light\" target=\"_blank\" [(href)]=\"profile_link\">Open profile on Spotify</a>\t\n</p>\n\n<!--\n\thttps://stackoverflow.com/questions/40336155/binding-appending-to-href\n\thttps://www.w3schools.com/jsref/event_onclick.asp\n\thttps://stackoverflow.com/questions/52579644/text-binding-between-input-and-span-in-angular\n-->\n"],"mappings":";;;AASA,OAAM,MAAOA,cAAc;EAKzB;EACAC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;IAL3B,KAAAC,IAAI,GAAU,IAAI;IAClB,KAAAC,WAAW,GAAU,6BAA6B;IAClD,KAAAC,YAAY,GAAU,IAAI;EAGoB;EAE9CC,QAAQA,CAAA,GACR;EAEA;;EAEA;EACMC,aAAaA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACjBD,KAAI,CAACN,OAAO,CAACQ,OAAO,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAI;QACnCJ,KAAI,CAACL,IAAI,GAAGS,IAAI,CAACT,IAAI;QACrBK,KAAI,CAACJ,WAAW,GAAGQ,IAAI,CAACC,QAAQ;QAChCL,KAAI,CAACH,YAAY,GAAGO,IAAI,CAACE,cAAc;MACzC,CAAC,CAAC;IAAC;EACL;EAAC,QAAAC,CAAA,G;qBApBUf,cAAc,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdpB,cAAc;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BX,EAAA,CAAAa,cAAA,gBAAwD;QAA1Bb,EAAA,CAAAc,UAAA,mBAAAC,gDAAA;UAAA,OAASH,GAAA,CAAArB,aAAA,EAAe;QAAA,EAAC;QAACS,EAAA,CAAAgB,MAAA,yBAAkB;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEnFjB,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAgB,MAAA,uBAAgB;QAAAhB,EAAA,CAAAa,cAAA,cAAyB;QAAAb,EAAA,CAAAgB,MAAA,UAAG;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAEvDjB,EAAA,CAAAkB,SAAA,aAA2B;QAC3BlB,EAAA,CAAAa,cAAA,QAAG;QAEuCb,EAAA,CAAAc,UAAA,wBAAAK,gDAAAC,MAAA;UAAA,OAAAR,GAAA,CAAAvB,YAAA,GAAA+B,MAAA;QAAA,EAAuB;QAACpB,EAAA,CAAAgB,MAAA,8BAAuB;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;;;QALnEjB,EAAA,CAAAqB,SAAA,GAAkB;QAAlBrB,EAAA,CAAAsB,UAAA,cAAAV,GAAA,CAAAzB,IAAA,EAAAa,EAAA,CAAAuB,cAAA,CAAkB;QAEvCvB,EAAA,CAAAqB,SAAA,GAAqB;QAArBrB,EAAA,CAAAwB,qBAAA,QAAAZ,GAAA,CAAAxB,WAAA,EAAAY,EAAA,CAAAyB,aAAA,CAAqB;QAGgBzB,EAAA,CAAAqB,SAAA,GAAuB;QAAvBrB,EAAA,CAAAsB,UAAA,SAAAV,GAAA,CAAAvB,YAAA,EAAAW,EAAA,CAAAyB,aAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
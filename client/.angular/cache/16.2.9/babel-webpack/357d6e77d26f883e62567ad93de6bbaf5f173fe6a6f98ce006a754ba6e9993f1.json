{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/spotify.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/track-list/track-list.component\";\nfunction ArtistPageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 3);\n    i0.ɵɵelementStart(5, \"p\")(6, \"a\", 4);\n    i0.ɵɵlistener(\"hrefChange\", function ArtistPageComponent_div_0_Template_a_hrefChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.artist.url = $event);\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"h3\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"app-track-list\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.artist.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.artist.imageURL, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r0.artist.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Open \", ctx_r0.artist.name, \" on Spotify\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.artist.name, \"'s Top Tracks\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tracks\", ctx_r0.topTracks);\n  }\n}\nexport class ArtistPageComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n  }\n  //when the artist page is activated, sends requests to Express to get data to populate the appropriate fields\n  ngOnInit() {\n    this.artistId = this.route.snapshot.paramMap.get('id');\n    //TODO: Inject the spotifyService and use it to get the artist data, related artists, top tracks for the artist, and the artist's albums\n    this.spotifyService.getArtist(this.artistId).then(data => {\n      this.artist = data;\n    });\n    this.spotifyService.getRelatedArtists(this.artistId).then(data => {\n      this.relatedArtists = data;\n    });\n    this.spotifyService.getTopTracksForArtist(this.artistId).then(data => {\n      this.topTracks = data;\n    });\n    this.spotifyService.getAlbumsForArtist(this.artistId).then(data => {\n      this.albums = data;\n    });\n  }\n  static #_ = this.ɵfac = function ArtistPageComponent_Factory(t) {\n    return new (t || ArtistPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ArtistPageComponent,\n    selectors: [[\"app-artist-page\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"wholePage\", 4, \"ngIf\"], [\"id\", \"wholePage\"], [\"id\", \"artistsName\"], [\"id\", \"artistsPicImg\", 3, \"src\"], [\"role\", \"button\", \"target\", \"_blank\", 1, \"btn\", \"btn-light\", 3, \"href\", \"hrefChange\"], [\"id\", \"topTracks\"], [\"id\", \"tracksTracksRows\", 3, \"tracks\"]],\n    template: function ArtistPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ArtistPageComponent_div_0_Template, 12, 6, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.artist);\n      }\n    },\n    dependencies: [i3.NgIf, i4.TrackListComponent],\n    styles: [\"#wholePage[_ngcontent-%COMP%]{\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    grid-template-rows: 1fr 1fr;\\n    width: 100%;\\n    height: 100%;\\n    \\n\\n\\n}\\n\\n#artistsName[_ngcontent-%COMP%]{\\n    grid-column: 1/2;\\n    grid-row: 1/2;\\n    display: flex;\\n    flex-direction: column;\\n\\n    justify-content: flex-start;\\n    align-items: center;\\n  \\n    \\n\\n\\n    \\n}\\n\\n#topTracks[_ngcontent-%COMP%]{\\n    grid-column: 2/3;\\n    grid-row: 1/2;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    align-items: center;\\n    \\n\\n    \\n\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#artistsPicImg[_ngcontent-%COMP%]{\\n\\twidth: 450px;\\n\\theight: 450px;\\n}\\n\\n#tracksTracksRows[_ngcontent-%COMP%]{\\n\\theight: 85vh; \\n\\n    \\n\\n    overflow-y: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXJ0aXN0LXBhZ2UvYXJ0aXN0LXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLHlCQUF5Qjs7QUFFN0I7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7O0lBRXRCLDJCQUEyQjtJQUMzQixtQkFBbUI7O0lBRW5COzBCQUNzQjs7QUFFMUI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQiw2QkFBNkI7SUFDN0IseUJBQXlCO0FBQzdCOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHOztBQUVIO0NBQ0MsWUFBWTtDQUNaLGFBQWE7QUFDZDs7QUFFQTtDQUNDLFlBQVksRUFBRSxtREFBbUQ7SUFDOUQsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIlxuI3dob2xlUGFnZXtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC8qIHBsYWNlLWl0ZW1zOiBjZW50ZXI7ICovXG5cbn1cblxuI2FydGlzdHNOYW1le1xuICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgZ3JpZC1yb3c6IDEvMjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgXG4gICAgLyoganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cbiAgICBcbn1cblxuI3RvcFRyYWNrc3tcbiAgICBncmlkLWNvbHVtbjogMi8zO1xuICAgIGdyaWQtcm93OiAxLzI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyOyAqL1xuICAgIC8qIGFsaWduLWl0ZW1zOiBjZW50ZXI7ICovXG59XG5cbi8qICNvdGhlckFsYnVtc3tcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIGdyaWQtcm93OiAyLzM7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4jc2ltaWxhckFydGlzdHN7XG4gICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICBncmlkLXJvdzogMi8zO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn0gKi9cblxuI2FydGlzdHNQaWNJbWd7XG5cdHdpZHRoOiA0NTBweDtcblx0aGVpZ2h0OiA0NTBweDtcbn1cblxuI3RyYWNrc1RyYWNrc1Jvd3N7XG5cdGhlaWdodDogODV2aDsgLyogU2V0IHRoZSBkZXNpcmVkIGhlaWdodCBmb3IgdGhlIHNjcm9sbGFibGUgYXJlYSAqL1xuICAgIC8qIHdpZHRoOiA0NXZ3OyAqL1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ArtistPageComponent_div_0_Template_a_hrefChange_6_listener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","artist","url","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","name","ɵɵproperty","imageURL","ɵɵsanitizeUrl","ɵɵtextInterpolate1","topTracks","ArtistPageComponent","constructor","route","spotifyService","ngOnInit","artistId","snapshot","paramMap","get","getArtist","then","data","getRelatedArtists","relatedArtists","getTopTracksForArtist","getAlbumsForArtist","albums","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","SpotifyService","_2","selectors","decls","vars","consts","template","ArtistPageComponent_Template","rf","ctx","ɵɵtemplate","ArtistPageComponent_div_0_Template"],"sources":["/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/pages/artist-page/artist-page.component.ts","/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/pages/artist-page/artist-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ArtistData } from '../../data/artist-data';\nimport { TrackData } from '../../data/track-data';\nimport { AlbumData } from '../../data/album-data';\nimport { SpotifyService } from '../../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-page',\n  templateUrl: './artist-page.component.html',\n  styleUrls: ['./artist-page.component.css']\n})\nexport class ArtistPageComponent implements OnInit {\n\tartistId:string;\n\tartist:ArtistData;\n\trelatedArtists:ArtistData[];\n\ttopTracks:TrackData[];\n\talbums:AlbumData[];\n\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService){ }\n\n  //when the artist page is activated, sends requests to Express to get data to populate the appropriate fields\n  ngOnInit() {\n  \tthis.artistId = this.route.snapshot.paramMap.get('id');\n    //TODO: Inject the spotifyService and use it to get the artist data, related artists, top tracks for the artist, and the artist's albums\n    this.spotifyService.getArtist(this.artistId).then((data)=>{\n      this.artist = data\n    });\n\n    this.spotifyService.getRelatedArtists(this.artistId).then((data)=>{\n      this.relatedArtists = data;\n    });\n\n    this.spotifyService.getTopTracksForArtist(this.artistId).then((data)=>{\n      this.topTracks = data;\n    });\n\n    this.spotifyService.getAlbumsForArtist(this.artistId).then((data)=>{\n      this.albums = data;\n    });\n\n    \n\n\n  \n  }\n\n}","<div id = \"wholePage\" *ngIf=\"artist\">\n\t<div id = \"artistsName\">\n\t\t<!--TODO: populate with artist name-->\n\t\t<h1>{{artist.name}}</h1>\n\t\t<!--TODO: populate with artist image URL-->\n\t\t<img id=\"artistsPicImg\" [src]=\"this.artist.imageURL\">\n\t\t<p>\n\t\t\t<!--TODO: link to artist page on spotify, display artist name-->\n\t\t\t<a class=\"btn btn-light\" role=\"button\" target=\"_blank\" [(href)]=\"this.artist.url\">Open {{artist.name}} on Spotify</a>\n\t\t</p>\n\t</div>\n\t<!-- <div>\n\t\t<h3>Genres</h3>\n\t\t<ul>\n\t\t\t<li *ngFor=\"let genre of this.artist.genres\">{{genre}}</li>\n\t\t</ul>\n\t\t<p>\n\t\t</p>\n\t</div> -->\n\t<div id = \"topTracks\">\n\t\t<!--TODO: display artist name-->\n\t\t<h3>{{artist.name}}'s Top Tracks</h3>\n\t\t<!--TODO: display the artist's top tracks-->\n\t\t<app-track-list id = \"tracksTracksRows\" [tracks]=\"topTracks\"></app-track-list>\n\t</div>\n\t</div>\n\t\n\n\t<!-- <div *ngIf=\"artist\">\n\t\t<div id = \"otherAlbums\">\n\t\t\t<h3>{{artist.name}}'s Albums</h3>\n\t\t\t<app-carousel [carouselId]=\"artist\" [resources]=\"albums\"></app-carousel>\n\t\t</div>\n\t\t<div id = \"similarArtists\">\n\t\t\t<h3>Similar Artists</h3>\n\t\t\t<app-carousel [carouselId]=\"artist\" [resources]=\"relatedArtists\"></app-carousel>\n\t\t</div>\n\t\n\t</div> -->\n\n\n<!-- <div *ngIf=\"artist\">\n\t<div id = \"otherAlbums\">\n\t\t<h3>{{artist.name}}'s Albums</h3>\n\t\t<app-carousel [carouselId]=\"artist\" [resources]=\"albums\"></app-carousel>\n\t</div>\n\t<div id = \"similarArtists\">\n\t\t<h3>Similar Artists</h3>\n\t\t<app-carousel [carouselId]=\"artist\" [resources]=\"relatedArtists\"></app-carousel>\n\t</div>\n\n</div> -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
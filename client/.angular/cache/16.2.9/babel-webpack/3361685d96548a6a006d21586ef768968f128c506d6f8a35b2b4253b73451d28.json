{"ast":null,"code":"import { SpotifyService } from '../../services/spotify.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/spotify.service\";\nfunction SearchComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", category_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r3, \" \");\n  }\n}\nfunction SearchComponent_app_carousel_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-carousel\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"carouselId\", ctx_r1.searchCategory)(\"resources\", ctx_r1.resources);\n  }\n}\nfunction SearchComponent_app_track_list_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-track-list\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tracks\", ctx_r2.resources);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService) {\n    this.spotifyService = spotifyService;\n    this.searchCategories = ['artist', 'album', 'track'];\n  }\n  ngOnInit() {}\n  //when the search app is activated, this function sends a request to Express and populates the appropriate fields\n  search() {\n    //TODO: call search function in spotifyService and parse response\n    this.spotifyService.searchFor(this.searchCategory, this.searchString).then(data => {\n      this.resources = data;\n    });\n  }\n  static #_ = this.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    features: [i0.ɵɵProvidersFeature([SpotifyService])],\n    decls: 9,\n    vars: 5,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-light\", 3, \"click\"], [3, \"carouselId\", \"resources\", 4, \"ngIf\"], [3, \"tracks\", 4, \"ngIf\"], [3, \"ngValue\"], [3, \"carouselId\", \"resources\"], [3, \"tracks\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Search Spotify\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.searchString = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_select_ngModelChange_3_listener($event) {\n          return ctx.searchCategory = $event;\n        });\n        i0.ɵɵtemplate(4, SearchComponent_option_4_Template, 2, 2, \"option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_5_listener() {\n          return ctx.search();\n        });\n        i0.ɵɵtext(6, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, SearchComponent_app_carousel_7_Template, 1, 2, \"app-carousel\", 3);\n        i0.ɵɵtemplate(8, SearchComponent_app_track_list_8_Template, 1, 1, \"app-track-list\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchString);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchCategory);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.searchCategories);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.searchCategory === \"artist\" || ctx.searchCategory === \"album\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.searchCategory === \"track\");\n      }\n    },\n    styles: [\"input[_ngcontent-%COMP%] {\\n\\tmargin: 10px;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n\\tmargin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxZQUFZO0FBQ2I7O0FBRUE7Q0FDQyxZQUFZO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XG5cdG1hcmdpbjogMTBweDtcbn1cblxuc2VsZWN0IHtcblx0bWFyZ2luOiAxMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["SpotifyService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","category_r3","ɵɵadvance","ɵɵtextInterpolate1","ɵɵelement","ctx_r1","searchCategory","resources","ctx_r2","SearchComponent","constructor","spotifyService","searchCategories","ngOnInit","search","searchFor","searchString","then","data","_","ɵɵdirectiveInject","i1","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","SearchComponent_Template","rf","ctx","ɵɵlistener","SearchComponent_Template_input_ngModelChange_2_listener","$event","SearchComponent_Template_select_ngModelChange_3_listener","ɵɵtemplate","SearchComponent_option_4_Template","SearchComponent_Template_button_click_5_listener","SearchComponent_app_carousel_7_Template","SearchComponent_app_track_list_8_Template"],"sources":["/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/components/search/search.component.ts","/Users/diegoguzman/Downloads/Spotify_Browser/client/src/app/components/search/search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { ArtistData } from '../../data/artist-data';\nimport { AlbumData } from '../../data/album-data';\nimport { TrackData } from '../../data/track-data';\nimport { ResourceData } from '../../data/resource-data';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  providers: [ SpotifyService ]\n})\nexport class SearchComponent implements OnInit {\n  searchString:string;\n  searchCategories:string[] = ['artist', 'album', 'track'];\n  searchCategory:string;\n  resources:ResourceData[];\n\n  constructor(private spotifyService:SpotifyService) { }\n\n  ngOnInit() {\n  }\n\n  \n  //when the search app is activated, this function sends a request to Express and populates the appropriate fields\n  search() {\n    //TODO: call search function in spotifyService and parse response\n    this.spotifyService.searchFor(this.searchCategory, this.searchString).then((data) => {\n      this.resources = data\n    });\n    }\n  }\n\n","\n<h1>Search Spotify</h1>\n<!--TODO: bind input's model to searchString-->\n<input [(ngModel)]=\"searchString\">\n<!--TODO: bind select's model to searchCategory-->\n<select [(ngModel)]=\"searchCategory\">\n\t<!--TODO: loop over searchCategories to create dropdown options-->\n\t<!--populate body and text value https://www.w3schools.com/tags/att_option_selected.asp-->\n\t<option [ngValue]=\"category\" *ngFor=\"let category of searchCategories\">\n\t\t{{category}}\n\t</option>\n</select>\n\n<!--TODO: Call search function when the button is clicked-->\n<button class=\"btn btn-light\" (click)=\"search()\">Search</button>\n<!--TODO: Display a carousel component if searching for an artist or album. Bind carousel's resources and give it a static carouselId.-->\n<app-carousel *ngIf=\"searchCategory==='artist' || searchCategory==='album'\" [carouselId]=\"searchCategory\" [resources]=\"resources\"></app-carousel>\n<!--TODO: Display a track-list component if searching for a track. Bind track-list's tracks.-->\n<app-track-list *ngIf=\"searchCategory==='track'\" [tracks]=\"resources\"></app-track-list>\n\n<!-- sources \nhttps://docs.angularjs.org/api/ng/directive/ngModel\n-->\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}